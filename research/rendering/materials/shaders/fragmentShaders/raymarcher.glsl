uniform vec3 iResolution;
uniform float iTime;

/**
 * Part 2 Challenges
 * - Change the diffuse color of the sphere to be blue
 * - Change the specual color of the sphere to be green
 * - Make one of the lights pulse by having its intensity vary over time
 * - Add a third light to the scene
 */

const int MAX_MARCHING_STEPS = 255;
const float MIN_DIST = 0.0;
const float MAX_DIST = 100.0;
const float EPSILON = 0.0001;
float relu(float value) {
	 return max(0.0, value);
}
float relu2(float value) {
	 return min(max(0.0, value), 1.0);
}

float evaluateNet(vec2 inputPoint) {
	 return relu2(relu(relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.18379146570278354 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.3897507144729619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.331951941146883 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3493359952833354 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.37463767725378955 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.32547460226447233 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.394428608043098 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.22529785809822442 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.1465596002165365 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.20357256146326824 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.36908297342967783 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.13446165013606703 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.16000227404823977 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.06470189121136995 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.10558499270711026 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.06277673260269173 + -0.2936073483262205) * -0.09218286854655222 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.5377472175060058 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.7098532946017604 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.10710299194279035 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.06380813972097946 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.1704490804047091 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.3468225054892985 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3399191631546899 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.4992115655888793 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6114336702490708 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9098007146022189 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.362632840882939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.9359076904262661 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3402507093986411 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.0234084229831575 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06901446222388512 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.2019068196637205 + -2.8285263392173263) * 0.017370446185208353 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.4730381578011441 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.013499165942124509 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.07169295421979602 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.43052579578007677 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.38264154820451 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.0305381326179281 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.23754205731815298 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.010675164456349749 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.5486682777762492 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.2426937283208533 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.09104015081556742 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.07102617688479139 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.06742614933329437 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.21821211069437182 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.2576264612152493 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.01646450913734164 + -0.52243538220565) * 0.04821054312922867 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.7977202967392767 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.9047637422975977 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.3125194272479144 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10145020484689721 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.8968953974937112 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.33383043675498014 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.18445338360917599 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.636910535872092 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.7710312276138369 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.25166175755826825 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.40119606524587414 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.0713263034547817 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.27365447447609303 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.2547042805411604 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 4.177580707347099 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.23459173224639615 + -0.3026477534678599) * -0.3044791128633765 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.1782546416612163 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.4192894176053934 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.4810054793023547 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.15012952490126155 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -2.0057437615752476 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -2.4381462493830903 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.05171628775829435 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -2.858392732641581 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.771009910018242 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9959393567654248 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2823619343091571 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.778814919743931 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.24935337651602277 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 3.3156811839497897 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6020587771528976 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.059632612688199284 + -1.5442421487992866) * -0.19240078051778614 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.20304201606853395 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.0750593778146018 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.3428465197690693 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.02343294242966016 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.36634903266393837 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.41686255805019984 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.42213779613475483 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.41692414461448996 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.25098612370525986 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.23004839500234137 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3236072794489141 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.3510791250357016 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09702159068760102 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.3103517746299704 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06347862136609377 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.029696038296038785 + -0.16246999118385239) * 0.4015981889974092 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.9664145533766436 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.05090169244484727 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.33279926247321057 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3342347851387491 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.5821534483758022 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.7063196845898683 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3706801743507706 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.0233933905987538 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.033403253469699 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.7054051755823699 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3160298900293798 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.3416180379158265 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.38632488880339116 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.7272854868592782 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.096298404744662 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1362350444381814 + 0.4258217246169071) * -0.43955342666113545 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.8277903585859498 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6850567166481741 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.7335276466256493 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.12360768929733164 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.412747061382331 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -3.699691105512163 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40467211023873134 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.1337481811753511 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6381535804382859 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.5831906333869479 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.004903566446409939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.564236036614575 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.06911411910017695 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.6743407660811354 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.078618321843211 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.373940691918822 + 0.198109007766068) * 0.32821121340672815 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 1.8873066282633617 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6200161579976856 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.9318638233159079 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.35380089042666996 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.42673401872918043 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.2509422990491395 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.058976575238386314 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.3922285828158871 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 1.861204624219445 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 1.2266314233835767 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.41437058612927075 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.0345396925902905 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.15507775446467698 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 2.4128169409197904 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 2.5253353362503344 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1057204844088536 + -0.16306831915211012) * -0.26323653028276445 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.27031474698195895 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.470816605282061 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.19510089865420616 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10683271368937729 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40968554590490697 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.2809366910071275 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.25695492183773416 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.12171334506907641 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.27250228032181245 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.066976249471135 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.387952564807691 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.18557243088488598 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3625188223074467 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.01937120827181926 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.4274595524594311 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.3640535402832235 + -0.42081808642697943) * 0.3248957657479384 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.07929286663408139 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.2321861819376619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.337309226331248 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.41931000311930644 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40849749200525537 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.23147957256387514 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.21449163409681737 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.16983700331678 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.26821350089072965 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.36186345630841027 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.28328956446458264 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.008440674854609437 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.4326634025268529 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.15790469587002467 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.1233727566972388 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.4181307884192869 + -0.31098079367130926) * -0.21881640635304792 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07103748691188322 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -1.3025874468327665 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.7260881089192142 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3719025776332836 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.7455008347171489 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.7898059384964916 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.21115882950726345 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.3532431021857399 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.5213658769318141 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -1.3663424267310647 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.4200047806587784 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.888764087143651 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41288445086423387 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.6173368509423414 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.169617509094406 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.27573063528558245 + -2.011736196945255) * 0.5200506551927668 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.692309533940578 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.553992782264982 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.1681766217214888 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.16532114616118365 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.417194934325576 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.8133851195712267 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.2637651143080772 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.8334477703687453 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 3.751391594528201 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 2.788873077250928 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2804215325000873 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.4612968651323657 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.10688430222174791 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 1.6829066563240798 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6639141982214117 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.27007684575591895 + 7.393633774384683) * 0.028948084227359498 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07442950249893698 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.13183828675235762 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.0678872192709272 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.43069309194845157 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.03362859991204796 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.31483818364622507 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.07045871291275517 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.10380051693423473 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.367893528498695 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.012132406340643989 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.14543682909610026 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.08095706179469095 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41030750319345166 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.07723943396899854 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.3073498274365667 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.32472545768103167 + -0.25271102930357126) * -0.3720174652079042 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.16835503321637219 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.31221927122439125 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.05751313027278292 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.2837606987871868 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.04574505535458598 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.4278736857433839 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40704818247179986 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.07261296063361544 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.24690030775777894 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.09033529098983145 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3195652677186046 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.05743781589184045 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09068656560693632 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.15341318819482735 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.040686115237186855 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.16317023470867736 + -0.21154689328156887) * 0.3969293908070808 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.255775214884541 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.13097659162850958 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 2.174260948748088 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.3142488341486695 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.7301240935568145 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -5.194150189009106 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.300361764505457 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.3539332495414411 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -3.5762375381636327 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -3.198020652603834 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.2680260981375884 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 6.6237290063353536 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.28478807616606305 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -3.7230923242845138 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.040636907622284 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.060183768896349625 + 4.0189715657088225) * -0.0636405048221523 + -0.27634476044226) * -0.9707164167894478 + relu(relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.18379146570278354 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.3897507144729619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.331951941146883 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3493359952833354 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.37463767725378955 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.32547460226447233 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.394428608043098 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.22529785809822442 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.1465596002165365 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.20357256146326824 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.36908297342967783 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.13446165013606703 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.16000227404823977 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.06470189121136995 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.10558499270711026 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.06277673260269173 + -0.2936073483262205) * 0.1278217513205779 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.5377472175060058 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.7098532946017604 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.10710299194279035 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.06380813972097946 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.1704490804047091 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.3468225054892985 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3399191631546899 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.4992115655888793 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6114336702490708 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9098007146022189 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.362632840882939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.9359076904262661 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3402507093986411 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.0234084229831575 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06901446222388512 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.2019068196637205 + -2.8285263392173263) * -0.025040728346744656 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.4730381578011441 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.013499165942124509 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.07169295421979602 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.43052579578007677 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.38264154820451 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.0305381326179281 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.23754205731815298 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.010675164456349749 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.5486682777762492 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.2426937283208533 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.09104015081556742 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.07102617688479139 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.06742614933329437 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.21821211069437182 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.2576264612152493 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.01646450913734164 + -0.52243538220565) * 0.16884856060888478 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.7977202967392767 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.9047637422975977 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.3125194272479144 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10145020484689721 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.8968953974937112 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.33383043675498014 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.18445338360917599 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.636910535872092 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.7710312276138369 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.25166175755826825 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.40119606524587414 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.0713263034547817 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.27365447447609303 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.2547042805411604 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 4.177580707347099 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.23459173224639615 + -0.3026477534678599) * 0.021198805828546198 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.1782546416612163 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.4192894176053934 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.4810054793023547 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.15012952490126155 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -2.0057437615752476 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -2.4381462493830903 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.05171628775829435 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -2.858392732641581 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.771009910018242 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9959393567654248 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2823619343091571 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.778814919743931 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.24935337651602277 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 3.3156811839497897 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6020587771528976 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.059632612688199284 + -1.5442421487992866) * 0.4085149232907818 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.20304201606853395 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.0750593778146018 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.3428465197690693 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.02343294242966016 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.36634903266393837 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.41686255805019984 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.42213779613475483 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.41692414461448996 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.25098612370525986 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.23004839500234137 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3236072794489141 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.3510791250357016 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09702159068760102 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.3103517746299704 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06347862136609377 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.029696038296038785 + -0.16246999118385239) * 0.4927364826624367 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.9664145533766436 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.05090169244484727 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.33279926247321057 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3342347851387491 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.5821534483758022 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.7063196845898683 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3706801743507706 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.0233933905987538 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.033403253469699 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.7054051755823699 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3160298900293798 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.3416180379158265 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.38632488880339116 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.7272854868592782 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.096298404744662 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1362350444381814 + 0.4258217246169071) * 0.16574515671732656 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.8277903585859498 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6850567166481741 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.7335276466256493 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.12360768929733164 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.412747061382331 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -3.699691105512163 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40467211023873134 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.1337481811753511 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6381535804382859 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.5831906333869479 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.004903566446409939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.564236036614575 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.06911411910017695 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.6743407660811354 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.078618321843211 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.373940691918822 + 0.198109007766068) * -0.5098503453906907 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 1.8873066282633617 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6200161579976856 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.9318638233159079 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.35380089042666996 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.42673401872918043 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.2509422990491395 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.058976575238386314 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.3922285828158871 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 1.861204624219445 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 1.2266314233835767 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.41437058612927075 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.0345396925902905 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.15507775446467698 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 2.4128169409197904 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 2.5253353362503344 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1057204844088536 + -0.16306831915211012) * -0.2661165514245574 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.27031474698195895 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.470816605282061 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.19510089865420616 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10683271368937729 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40968554590490697 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.2809366910071275 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.25695492183773416 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.12171334506907641 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.27250228032181245 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.066976249471135 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.387952564807691 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.18557243088488598 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3625188223074467 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.01937120827181926 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.4274595524594311 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.3640535402832235 + -0.42081808642697943) * -0.058993692238052405 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.07929286663408139 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.2321861819376619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.337309226331248 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.41931000311930644 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40849749200525537 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.23147957256387514 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.21449163409681737 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.16983700331678 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.26821350089072965 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.36186345630841027 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.28328956446458264 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.008440674854609437 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.4326634025268529 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.15790469587002467 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.1233727566972388 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.4181307884192869 + -0.31098079367130926) * -0.39106649510324776 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07103748691188322 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -1.3025874468327665 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.7260881089192142 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3719025776332836 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.7455008347171489 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.7898059384964916 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.21115882950726345 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.3532431021857399 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.5213658769318141 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -1.3663424267310647 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.4200047806587784 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.888764087143651 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41288445086423387 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.6173368509423414 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.169617509094406 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.27573063528558245 + -2.011736196945255) * 0.14964222991026713 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.692309533940578 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.553992782264982 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.1681766217214888 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.16532114616118365 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.417194934325576 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.8133851195712267 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.2637651143080772 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.8334477703687453 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 3.751391594528201 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 2.788873077250928 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2804215325000873 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.4612968651323657 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.10688430222174791 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 1.6829066563240798 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6639141982214117 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.27007684575591895 + 7.393633774384683) * -0.39936767444237403 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07442950249893698 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.13183828675235762 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.0678872192709272 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.43069309194845157 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.03362859991204796 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.31483818364622507 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.07045871291275517 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.10380051693423473 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.367893528498695 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.012132406340643989 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.14543682909610026 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.08095706179469095 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41030750319345166 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.07723943396899854 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.3073498274365667 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.32472545768103167 + -0.25271102930357126) * 0.2690813565678309 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.16835503321637219 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.31221927122439125 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.05751313027278292 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.2837606987871868 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.04574505535458598 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.4278736857433839 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40704818247179986 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.07261296063361544 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.24690030775777894 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.09033529098983145 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3195652677186046 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.05743781589184045 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09068656560693632 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.15341318819482735 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.040686115237186855 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.16317023470867736 + -0.21154689328156887) * 0.21106731043381236 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.255775214884541 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.13097659162850958 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 2.174260948748088 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.3142488341486695 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.7301240935568145 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -5.194150189009106 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.300361764505457 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.3539332495414411 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -3.5762375381636327 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -3.198020652603834 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.2680260981375884 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 6.6237290063353536 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.28478807616606305 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -3.7230923242845138 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.040636907622284 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.060183768896349625 + 4.0189715657088225) * 0.08936333782169559 + -0.2605263335989351) * 0.0186580993782192 + relu(relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.18379146570278354 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.3897507144729619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.331951941146883 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3493359952833354 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.37463767725378955 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.32547460226447233 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.394428608043098 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.22529785809822442 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.1465596002165365 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.20357256146326824 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.36908297342967783 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.13446165013606703 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.16000227404823977 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.06470189121136995 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.10558499270711026 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.06277673260269173 + -0.2936073483262205) * -0.29175336097730625 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.5377472175060058 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.7098532946017604 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.10710299194279035 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.06380813972097946 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.1704490804047091 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.3468225054892985 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3399191631546899 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.4992115655888793 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6114336702490708 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9098007146022189 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.362632840882939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.9359076904262661 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3402507093986411 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.0234084229831575 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06901446222388512 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.2019068196637205 + -2.8285263392173263) * -0.19390716149202603 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.4730381578011441 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.013499165942124509 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.07169295421979602 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.43052579578007677 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.38264154820451 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.0305381326179281 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.23754205731815298 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.010675164456349749 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.5486682777762492 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.2426937283208533 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.09104015081556742 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.07102617688479139 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.06742614933329437 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.21821211069437182 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.2576264612152493 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.01646450913734164 + -0.52243538220565) * -0.33787661186597084 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.7977202967392767 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.9047637422975977 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.3125194272479144 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10145020484689721 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.8968953974937112 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.33383043675498014 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.18445338360917599 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.636910535872092 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.7710312276138369 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.25166175755826825 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.40119606524587414 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.0713263034547817 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.27365447447609303 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.2547042805411604 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 4.177580707347099 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.23459173224639615 + -0.3026477534678599) * 2.7477700453382994 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.1782546416612163 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.4192894176053934 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.4810054793023547 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.15012952490126155 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -2.0057437615752476 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -2.4381462493830903 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.05171628775829435 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -2.858392732641581 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.771009910018242 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9959393567654248 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2823619343091571 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.778814919743931 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.24935337651602277 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 3.3156811839497897 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6020587771528976 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.059632612688199284 + -1.5442421487992866) * 4.188598059429727 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.20304201606853395 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.0750593778146018 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.3428465197690693 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.02343294242966016 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.36634903266393837 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.41686255805019984 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.42213779613475483 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.41692414461448996 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.25098612370525986 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.23004839500234137 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3236072794489141 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.3510791250357016 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09702159068760102 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.3103517746299704 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06347862136609377 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.029696038296038785 + -0.16246999118385239) * 0.3575622646125937 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.9664145533766436 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.05090169244484727 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.33279926247321057 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3342347851387491 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.5821534483758022 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.7063196845898683 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3706801743507706 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.0233933905987538 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.033403253469699 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.7054051755823699 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3160298900293798 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.3416180379158265 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.38632488880339116 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.7272854868592782 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.096298404744662 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1362350444381814 + 0.4258217246169071) * -3.907387186346334 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.8277903585859498 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6850567166481741 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.7335276466256493 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.12360768929733164 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.412747061382331 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -3.699691105512163 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40467211023873134 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.1337481811753511 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6381535804382859 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.5831906333869479 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.004903566446409939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.564236036614575 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.06911411910017695 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.6743407660811354 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.078618321843211 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.373940691918822 + 0.198109007766068) * 5.910152708432416 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 1.8873066282633617 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6200161579976856 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.9318638233159079 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.35380089042666996 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.42673401872918043 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.2509422990491395 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.058976575238386314 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.3922285828158871 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 1.861204624219445 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 1.2266314233835767 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.41437058612927075 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.0345396925902905 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.15507775446467698 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 2.4128169409197904 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 2.5253353362503344 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1057204844088536 + -0.16306831915211012) * 5.692222017493723 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.27031474698195895 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.470816605282061 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.19510089865420616 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10683271368937729 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40968554590490697 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.2809366910071275 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.25695492183773416 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.12171334506907641 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.27250228032181245 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.066976249471135 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.387952564807691 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.18557243088488598 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3625188223074467 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.01937120827181926 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.4274595524594311 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.3640535402832235 + -0.42081808642697943) * 0.46404764642801916 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.07929286663408139 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.2321861819376619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.337309226331248 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.41931000311930644 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40849749200525537 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.23147957256387514 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.21449163409681737 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.16983700331678 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.26821350089072965 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.36186345630841027 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.28328956446458264 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.008440674854609437 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.4326634025268529 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.15790469587002467 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.1233727566972388 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.4181307884192869 + -0.31098079367130926) * 0.44317086643705894 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07103748691188322 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -1.3025874468327665 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.7260881089192142 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3719025776332836 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.7455008347171489 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.7898059384964916 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.21115882950726345 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.3532431021857399 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.5213658769318141 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -1.3663424267310647 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.4200047806587784 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.888764087143651 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41288445086423387 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.6173368509423414 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.169617509094406 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.27573063528558245 + -2.011736196945255) * -1.6503433113624608 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.692309533940578 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.553992782264982 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.1681766217214888 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.16532114616118365 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.417194934325576 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.8133851195712267 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.2637651143080772 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.8334477703687453 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 3.751391594528201 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 2.788873077250928 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2804215325000873 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.4612968651323657 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.10688430222174791 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 1.6829066563240798 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6639141982214117 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.27007684575591895 + 7.393633774384683) * -0.9406003619300648 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07442950249893698 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.13183828675235762 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.0678872192709272 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.43069309194845157 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.03362859991204796 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.31483818364622507 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.07045871291275517 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.10380051693423473 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.367893528498695 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.012132406340643989 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.14543682909610026 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.08095706179469095 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41030750319345166 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.07723943396899854 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.3073498274365667 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.32472545768103167 + -0.25271102930357126) * -0.5144200154945863 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.16835503321637219 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.31221927122439125 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.05751313027278292 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.2837606987871868 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.04574505535458598 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.4278736857433839 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40704818247179986 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.07261296063361544 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.24690030775777894 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.09033529098983145 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3195652677186046 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.05743781589184045 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09068656560693632 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.15341318819482735 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.040686115237186855 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.16317023470867736 + -0.21154689328156887) * 0.4015521527577163 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.255775214884541 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.13097659162850958 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 2.174260948748088 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.3142488341486695 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.7301240935568145 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -5.194150189009106 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.300361764505457 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.3539332495414411 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -3.5762375381636327 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -3.198020652603834 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.2680260981375884 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 6.6237290063353536 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.28478807616606305 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -3.7230923242845138 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.040636907622284 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.060183768896349625 + 4.0189715657088225) * 10.48640668976091 + -3.232997724347584) * -10.171423442906134 + relu(relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.18379146570278354 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.3897507144729619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.331951941146883 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3493359952833354 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.37463767725378955 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.32547460226447233 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.394428608043098 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.22529785809822442 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.1465596002165365 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.20357256146326824 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.36908297342967783 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.13446165013606703 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.16000227404823977 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.06470189121136995 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.10558499270711026 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.06277673260269173 + -0.2936073483262205) * -0.4360218768649066 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.5377472175060058 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.7098532946017604 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.10710299194279035 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.06380813972097946 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.1704490804047091 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.3468225054892985 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3399191631546899 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.4992115655888793 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6114336702490708 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9098007146022189 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.362632840882939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.9359076904262661 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3402507093986411 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.0234084229831575 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06901446222388512 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.2019068196637205 + -2.8285263392173263) * 0.13343169132440322 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.4730381578011441 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.013499165942124509 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.07169295421979602 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.43052579578007677 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.38264154820451 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.0305381326179281 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.23754205731815298 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.010675164456349749 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.5486682777762492 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.2426937283208533 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.09104015081556742 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.07102617688479139 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.06742614933329437 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.21821211069437182 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.2576264612152493 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.01646450913734164 + -0.52243538220565) * 0.27553419538509444 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.7977202967392767 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.9047637422975977 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.3125194272479144 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10145020484689721 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.8968953974937112 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.33383043675498014 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.18445338360917599 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.636910535872092 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.7710312276138369 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.25166175755826825 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.40119606524587414 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.0713263034547817 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.27365447447609303 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.2547042805411604 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 4.177580707347099 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.23459173224639615 + -0.3026477534678599) * -0.5232594258645551 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -1.1782546416612163 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.4192894176053934 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.4810054793023547 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.15012952490126155 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -2.0057437615752476 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -2.4381462493830903 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.05171628775829435 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -2.858392732641581 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.771009910018242 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.9959393567654248 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2823619343091571 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.778814919743931 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.24935337651602277 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 3.3156811839497897 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6020587771528976 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.059632612688199284 + -1.5442421487992866) * 0.0421094488525928 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.20304201606853395 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.0750593778146018 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.3428465197690693 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.02343294242966016 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.36634903266393837 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.41686255805019984 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.42213779613475483 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.41692414461448996 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.25098612370525986 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.23004839500234137 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3236072794489141 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.3510791250357016 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09702159068760102 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.3103517746299704 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.06347862136609377 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.029696038296038785 + -0.16246999118385239) * 0.38791301495881164 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.9664145533766436 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.05090169244484727 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.33279926247321057 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3342347851387491 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.5821534483758022 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.7063196845898683 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.3706801743507706 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.0233933905987538 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.033403253469699 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.7054051755823699 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3160298900293798 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.3416180379158265 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.38632488880339116 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.7272854868592782 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.096298404744662 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1362350444381814 + 0.4258217246169071) * 0.120762442727561 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.8277903585859498 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6850567166481741 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.7335276466256493 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.12360768929733164 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.412747061382331 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -3.699691105512163 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40467211023873134 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.1337481811753511 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.6381535804382859 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.5831906333869479 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.004903566446409939 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.564236036614575 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.06911411910017695 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.6743407660811354 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 3.078618321843211 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.373940691918822 + 0.198109007766068) * 0.25384529742944895 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 1.8873066282633617 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.6200161579976856 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.9318638233159079 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.35380089042666996 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.42673401872918043 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.2509422990491395 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.058976575238386314 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.3922285828158871 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 1.861204624219445 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 1.2266314233835767 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.41437058612927075 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.0345396925902905 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.15507775446467698 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 2.4128169409197904 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 2.5253353362503344 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.1057204844088536 + -0.16306831915211012) * -0.16946769518382754 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.27031474698195895 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.470816605282061 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.19510089865420616 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.10683271368937729 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40968554590490697 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.2809366910071275 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.25695492183773416 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.12171334506907641 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.27250228032181245 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.066976249471135 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.387952564807691 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.18557243088488598 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.3625188223074467 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.01937120827181926 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.4274595524594311 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.3640535402832235 + -0.42081808642697943) * 0.5372835092318432 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.07929286663408139 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.2321861819376619 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.337309226331248 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.41931000311930644 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -0.40849749200525537 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 0.23147957256387514 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.21449163409681737 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.16983700331678 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.26821350089072965 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.36186345630841027 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.28328956446458264 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.008440674854609437 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.4326634025268529 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 0.15790469587002467 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.1233727566972388 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.4181307884192869 + -0.31098079367130926) * 0.045525899094800676 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07103748691188322 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -1.3025874468327665 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 1.7260881089192142 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.3719025776332836 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.7455008347171489 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.7898059384964916 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.21115882950726345 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.3532431021857399 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -1.5213658769318141 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -1.3663424267310647 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.4200047806587784 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 2.888764087143651 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41288445086423387 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -1.6173368509423414 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.169617509094406 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * -0.27573063528558245 + -2.011736196945255) * 0.050467904881645174 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.692309533940578 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 1.553992782264982 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.1681766217214888 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.16532114616118365 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.417194934325576 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * 1.8133851195712267 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * -0.2637651143080772 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 1.8334477703687453 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 3.751391594528201 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 2.788873077250928 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.2804215325000873 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 1.4612968651323657 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * -0.10688430222174791 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * 1.6829066563240798 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * -0.6639141982214117 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.27007684575591895 + 7.393633774384683) * -0.5190001938362239 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * -0.07442950249893698 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * -0.13183828675235762 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 0.0678872192709272 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * 0.43069309194845157 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.03362859991204796 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.31483818364622507 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.07045871291275517 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -0.10380051693423473 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * 0.367893528498695 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -0.012132406340643989 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.14543682909610026 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 0.08095706179469095 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.41030750319345166 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.07723943396899854 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.3073498274365667 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.32472545768103167 + -0.25271102930357126) * -0.14619432847756972 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 0.16835503321637219 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.31221927122439125 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * -0.05751313027278292 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.2837606987871868 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * 0.04574505535458598 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -0.4278736857433839 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.40704818247179986 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * 0.07261296063361544 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -0.24690030775777894 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * 0.09033529098983145 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * -0.3195652677186046 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * -0.05743781589184045 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.09068656560693632 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -0.15341318819482735 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 0.040686115237186855 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.16317023470867736 + -0.21154689328156887) * -0.3410804001657073 + relu(relu(inputPoint.x * -3.6736667428856506 + inputPoint.y * 2.197948738956934 + 0.010720221110602966) * 2.255775214884541 + relu(inputPoint.x * 4.051710341331772 + inputPoint.y * -0.37322085810785066 + 1.8020060278874286) * 0.13097659162850958 + relu(inputPoint.x * -2.954593506521218 + inputPoint.y * -1.2707660373156417 + 1.4985535937286216) * 2.174260948748088 + relu(inputPoint.x * -0.22824608573260688 + inputPoint.y * -0.3486014581275234 + -0.21302420019985557) * -0.3142488341486695 + relu(inputPoint.x * -2.315848451615169 + inputPoint.y * -3.4013939365877817 + -3.5178979202493688) * -1.7301240935568145 + relu(inputPoint.x * -1.0690609689283623 + inputPoint.y * 3.1077927789599333 + 0.6527286983926992) * -5.194150189009106 + relu(inputPoint.x * -0.3622745519838714 + inputPoint.y * -0.21543863647383724 + -0.5562327854942584) * 0.300361764505457 + relu(inputPoint.x * -3.040564702767042 + inputPoint.y * -1.8341663204921745 + 2.154424856510428) * -1.3539332495414411 + relu(inputPoint.x * -1.6400187210116455 + inputPoint.y * 3.9373458641561796 + -1.5544118366101398) * -3.5762375381636327 + relu(inputPoint.x * -2.8354256682605907 + inputPoint.y * -0.4189932054565436 + -0.11604742830743393) * -3.198020652603834 + relu(inputPoint.x * -0.09330589282579688 + inputPoint.y * -0.47914841493095806 + -0.25352144056763054) * 0.2680260981375884 + relu(inputPoint.x * -1.8707991093772094 + inputPoint.y * -12.815694040285116 + -9.547767458622449) * 6.6237290063353536 + relu(inputPoint.x * -0.34126825063694327 + inputPoint.y * -0.3812459916422768 + -0.45815514381968236) * 0.28478807616606305 + relu(inputPoint.x * 2.150152868198573 + inputPoint.y * 2.3154463603660624 + -2.4452848510427385) * -3.7230923242845138 + relu(inputPoint.x * -2.7821551012318735 + inputPoint.y * -2.4836629681983373 + 2.177612309812942) * 6.040636907622284 + relu(inputPoint.x * 0.196838409144274 + inputPoint.y * -0.0910968287820501 + -0.23831385398677257) * 0.060183768896349625 + 4.0189715657088225) * -0.3243536278337123 + -0.04713116738548939) * 0.6542074054125618 + 5.426354843383027);
}
/**
 * Signed distance function for a sphere centered at the origin with radius 1.0;
 */
float sphereSDF(vec3 samplePoint) {
    return length(samplePoint) - 1.0;
}

/**
 * Signed distance function describing the scene.
 * 
 * Absolute value of the return value indicates the distance to the surface.
 * Sign indicates whether the point is inside or outside the surface,
 * negative indicating inside.
 */
float sceneSDF(vec3 samplePoint) {
    return -10.0*(evaluateNet(samplePoint.xy) * 2.0 -1.0);
}

/**
 * Return the shortest distance from the eyepoint to the scene surface along
 * the marching direction. If no part of the surface is found between start and end,
 * return end.
 * 
 * eye: the eye point, acting as the origin of the ray
 * marchingDirection: the normalized direction to march in
 * start: the starting distance away from the eye
 * end: the max distance away from the ey to march before giving up
 */
float shortestDistanceToSurface(vec3 eye, vec3 marchingDirection, float start, float end) {
    float depth = start;
    for (int i = 0; i < MAX_MARCHING_STEPS; i++) {
        float dist = sceneSDF(eye + depth * marchingDirection);
        if (dist < EPSILON) {
			return depth;
        }
        depth += dist;
        if (depth >= end) {
            return end;
        }
    }
    return end;
}
            

/**
 * Return the normalized direction to march in from the eye point for a single pixel.
 * 
 * fieldOfView: vertical field of view in degrees
 * size: resolution of the output image
 * fragCoord: the x,y coordinate of the pixel in the output image
 */
vec3 rayDirection(float fieldOfView, vec2 size, vec2 fragCoord) {
    vec2 xy = fragCoord - size / 2.0;
    float z = size.y / tan(radians(fieldOfView) / 2.0);
    return normalize(vec3(xy, -z));
}

/**
 * Using the gradient of the SDF, estimate the normal on the surface at point p.
 */
vec3 estimateNormal(vec3 p) {
    return normalize(vec3(
        sceneSDF(vec3(p.x + EPSILON, p.y, p.z)) - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)),
        sceneSDF(vec3(p.x, p.y + EPSILON, p.z)) - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)),
        sceneSDF(vec3(p.x, p.y, p.z  + EPSILON)) - sceneSDF(vec3(p.x, p.y, p.z - EPSILON))
    ));
}

/**
 * Lighting contribution of a single point light source via Phong illumination.
 * 
 * The vec3 returned is the RGB color of the light's contribution.
 *
 * k_a: Ambient color
 * k_d: Diffuse color
 * k_s: Specular color
 * alpha: Shininess coefficient
 * p: position of point being lit
 * eye: the position of the camera
 * lightPos: the position of the light
 * lightIntensity: color/intensity of the light
 *
 * See https://en.wikipedia.org/wiki/Phong_reflection_model#Description
 */
vec3 phongContribForLight(vec3 k_d, vec3 k_s, float alpha, vec3 p, vec3 eye,
                          vec3 lightPos, vec3 lightIntensity) {
    vec3 N = estimateNormal(p);
    vec3 L = normalize(lightPos - p);
    vec3 V = normalize(eye - p);
    vec3 R = normalize(reflect(-L, N));
    
    float dotLN = dot(L, N);
    float dotRV = dot(R, V);
    
    if (dotLN < 0.0) {
        // Light not visible from this point on the surface
        return vec3(0.0, 0.0, 0.0);
    } 
    
    if (dotRV < 0.0) {
        // Light reflection in opposite direction as viewer, apply only diffuse
        // component
        return lightIntensity * (k_d * dotLN);
    }
    return lightIntensity * (k_d * dotLN + k_s * pow(dotRV, alpha));
}

/**
 * Lighting via Phong illumination.
 * 
 * The vec3 returned is the RGB color of that point after lighting is applied.
 * k_a: Ambient color
 * k_d: Diffuse color
 * k_s: Specular color
 * alpha: Shininess coefficient
 * p: position of point being lit
 * eye: the position of the camera
 *
 * See https://en.wikipedia.org/wiki/Phong_reflection_model#Description
 */
vec3 phongIllumination(vec3 k_a, vec3 k_d, vec3 k_s, float alpha, vec3 p, vec3 eye) {
    const vec3 ambientLight = 0.5 * vec3(1.0, 1.0, 1.0);
    vec3 color = ambientLight * k_a;
    
    vec3 light1Pos = vec3(4.0 * sin(iTime),
                          2.0,
                          4.0 * cos(iTime));
    vec3 light1Intensity = vec3(0.4, 0.4, 0.4);
    
    color += phongContribForLight(k_d, k_s, alpha, p, eye,
                                  light1Pos,
                                  light1Intensity);
    
    vec3 light2Pos = vec3(2.0 * sin(0.37 * iTime),
                          2.0 * cos(0.37 * iTime),
                          2.0);
    vec3 light2Intensity = vec3(0.4, 0.4, 0.4);
    
    color += phongContribForLight(k_d, k_s, alpha, p, eye,
                                  light2Pos,
                                  light2Intensity);    
    return color;
}

mat4 viewMatrixs(vec3 eye, vec3 center, vec3 up) {
    // Based on gluLookAt man page
    vec3 f = normalize(center - eye);
    vec3 s = normalize(cross(f, up));
    vec3 u = cross(s, f);
    return mat4(
        vec4(s, 0.0),
        vec4(u, 0.0),
        vec4(-f, 0.0),
        vec4(0.0, 0.0, 0.0, 1)
    );
}
/*
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec3 dir = rayDirection(45.0, iResolution.xy, fragCoord);
    vec3 eye = vec3(0.0, 0.0, 5.0);
    float dist = shortestDistanceToSurface(eye, dir, MIN_DIST, MAX_DIST);
    
    if (dist > MAX_DIST - EPSILON) {
        // Didn't hit anything
        fragColor = vec4(0.0, 0.0, 0.0, 0.0);
		return;
    }
    
    // The closest point on the surface to the eyepoint along the view ray
    vec3 p = eye + dist * dir;
    
    vec3 K_a = vec3(0.2, 0.2, 0.2);
    vec3 K_d = vec3(0.7, 0.2, 0.2);
    vec3 K_s = vec3(1.0, 1.0, 1.0);
    float shininess = 10.0;
    
    vec3 color = phongIllumination(K_a, K_d, K_s, shininess, p, eye);
    
    fragColor = vec4(color, 1.0);
}*/

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	float denstity = evaluateNet(vec2(fragCoord.x/iResolution.x, fragCoord.y/iResolution.y));
    
    fragColor = vec4(denstity, denstity, denstity, 1.0);
}

void main() {
   mainImage(gl_FragColor, gl_FragCoord.xy);
}

