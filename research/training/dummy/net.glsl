float relu(float value) {
	 return max(0.0, value);
}

float evaluateNet(vec3 inputPoint) {
	 return relu(relu(relu(inputPoint.x * -0.14196276384559087 + inputPoint.y * -0.6974468302392686 + -0.1496226854746221) * 0.29164405339102156 + relu(inputPoint.x * -0.021045621933451004 + inputPoint.y * -0.9347486016370065 + 0.7595027122046032) * 2.3966516660262482 + relu(inputPoint.x * -0.8552284819998783 + inputPoint.y * -0.2642221706692957 + -0.5472480952822393) * -0.5165025601878858 + relu(inputPoint.x * -3.513553958199724 + inputPoint.y * -3.351990165456805 + 6.924177031457391) * 4.018654098619955 + relu(inputPoint.x * -0.6043470907199873 + inputPoint.y * 0.06640954415473321 + -0.8751081312384833) * 0.3290348239019944 + -0.4763508411099903) * -4.53025854202922 + relu(relu(inputPoint.x * -0.14196276384559087 + inputPoint.y * -0.6974468302392686 + -0.1496226854746221) * -0.14147893993631053 + relu(inputPoint.x * -0.021045621933451004 + inputPoint.y * -0.9347486016370065 + 0.7595027122046032) * -0.6152434019284915 + relu(inputPoint.x * -0.8552284819998783 + inputPoint.y * -0.2642221706692957 + -0.5472480952822393) * 0.514528340045999 + relu(inputPoint.x * -3.513553958199724 + inputPoint.y * -3.351990165456805 + 6.924177031457391) * -0.3192029313354356 + relu(inputPoint.x * -0.6043470907199873 + inputPoint.y * 0.06640954415473321 + -0.8751081312384833) * 0.6439447488447819 + -0.7683488192616599) * -0.8628532875533917 + 8.533542512922587);
}